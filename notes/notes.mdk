Title         : LSP for TLA+
Author        : RiSE
Affiliation   : Microsoft Research
Email         : rise@microsoft.com

Colorizer     : javascript
Bib style     : plainnat
Bibliography  : example
Logo          : True

Doc class     : [10pt]article

[TITLE]

~ Abstract
There is more in you of good than you know, child of the kindly West.
Some courage and some wisdom, blended in measure. If more of us valued
food and cheer and song above hoarded gold, it would be a merrier world.
~

# TLA+ or another language?     { #sec-intro }

Most asked-for feature (besides solving state space explosion) with regards to Tooling

## Obstacles

* Untyped, math-based, high-level makes Tooling generally more challenging
  * Impedance mismatch with programming IDEs
* TLA+ and/or PlusCal?
  * PlusCal uses TLA+ expressions
* LSP does not cover functionality available in TLA+ Toolbox for
  * model checking
    * => Embed HTML
    * => Text-based Model
  * proof assistant
    * decompose proof command
      * => Hack refactoring supoprt of LSP
* Current Toolbox and Tools implemented in Java
* Syntax and semantic checker (SANY) command-line only tool
  * Refactoring SANY a hackathon of its own
  * => Duplicate functionality? :-(

# LSP

* https://en.wikipedia.org/wiki/Language_Server_Protocol
* https://microsoft.github.io/language-server-protocol/
* https://langserver.org/
* [LSP 4 Java](https://github.com/eclipse/lsp4j)

# Prior Work

* https://github.com/ahelwer/tlaplus-language-server
* https://github.com/TeamTilapia/vscode-tilapia

# Organizational

* Code at GitHub
* Tent vs. Conference Room
* Next meeting


[BIB]
